<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
    http://www.springframework.org/schema/security  
    http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	<global-method-security pre-post-annotations="enabled" />
	<!-- 该路径下的资源不用过滤 -->
	<http pattern="/static/**" security="none" />
	<http pattern="/service/validateCode/generate" security="none"></http>
	<http pattern="/servlets/image" security="none"></http>
    <http pattern="/login/img/V_Mark_Logo.png" security="none"></http>
	<http pattern="/login/*" security="none"></http>
	<http entry-point-ref="authenticationProcessingFilterEntryPoint"
		access-denied-page="/forward/admin|access-denied">
		<intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/forward/**" access="IS_AUTHENTICATED_FULLY" />
		<intercept-url pattern="/index.html" access="IS_AUTHENTICATED_FULLY" />
		<!-- <logout /> -->
		<!-- 实现免登陆验证 -->
		<remember-me />
		<!-- Session 超时默认跳转页面 -->
		<session-management invalid-session-url="/login"
			session-authentication-error-url="/login"
			session-authentication-strategy-ref="sas"></session-management>
		<custom-filter ref="cusessionFilter" before="SECURITY_CONTEXT_FILTER" />
		<custom-filter ref="loginFilter" position="FORM_LOGIN_FILTER" />
		<custom-filter ref="logoutFilter" position="LOGOUT_FILTER" />
		<custom-filter ref="securityFilter" before="FILTER_SECURITY_INTERCEPTOR" />
	</http>
	<beans:bean id="sas"
		class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
		<beans:constructor-arg name="sessionRegistry"
			ref="sessionRegistry" />
	</beans:bean>
	<beans:bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />
	<beans:bean id="cusessionFilter"
		class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<beans:constructor-arg name="sessionRegistry"
			ref="sessionRegistry" />
		<beans:constructor-arg name="expiredUrl" value="/login" />
	</beans:bean>
	<beans:bean
		class="org.springframework.security.authentication.event.LoggerListener">
	</beans:bean>
	<!-- 登录验证器 -->
	<beans:bean id="loginFilter"
		class="com.lbsp.promotion.webplatform.security.filter.CustomUsernamePasswordAuthenticationFilter">
		<!-- 处理登录的action -->
		<beans:property name="filterProcessesUrl" value="/service/j_spring_security_check"></beans:property>
		<!-- 验证成功后的处理 -->
		<beans:property name="authenticationSuccessHandler"
			ref="loginLogAuthenticationSuccessHandler"></beans:property>
		<!-- 验证失败后的处理 -->
		<beans:property name="authenticationFailureHandler"
			ref="customAuthenticationFailureHandler"></beans:property>
		<beans:property name="authenticationManager" ref="myAuthenticationManager"></beans:property>
		<beans:property name="sessionAuthenticationStrategy" ref="sas"></beans:property>
	</beans:bean>
	<beans:bean id="securityContextLogoutHandler" class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"></beans:bean>
	<!-- 注销过滤器 -->
	<beans:bean id="logoutFilter"
		class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<beans:constructor-arg value="/login" />
		<beans:constructor-arg>
			<beans:list>
				<beans:ref bean="securityContextLogoutHandler"/>
			</beans:list>
		</beans:constructor-arg>
		<beans:property name="filterProcessesUrl" value="/service/logout" />
	</beans:bean>
	<beans:bean id="loginLogAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="alwaysUseDefaultTargetUrl" value="true"></beans:property>
		<beans:property name="defaultTargetUrl" value="/"></beans:property>
	</beans:bean>
	<beans:bean id="customAuthenticationFailureHandler"
		class="com.lbsp.promotion.webplatform.exception.handler.CustomAuthenticationFailureHandler">
		<beans:property name="useForward" value="false"></beans:property>
		<beans:property name="defaultFailureUrl" value="/login?error=systemerror"></beans:property>
		<beans:property name="exceptionMappings">
			<beans:map>
				<beans:entry
					key="com.lbsp.promotion.entity.exception.security.ValidateCodeErrorException"
					value="/login?error="></beans:entry>
				<beans:entry
					key="com.lbsp.promotion.entity.exception.security.UserNameOrPwdNotExistException"
					value="/login?error="></beans:entry>
			</beans:map>
		</beans:property>
	</beans:bean>

	<!-- 认证过滤器 -->
	<beans:bean id="securityFilter"
		class="com.lbsp.promotion.webplatform.security.filter.CustomSecurityInterceptorFilter">
		<!-- 用户拥有的角色 -->
		<beans:property name="authenticationManager" ref="myAuthenticationManager" />
		<!-- 用户是否拥有所请求资源的角色 -->
		<beans:property name="accessDecisionManager" ref="myAccessDecisionManager" />
		<!-- 资源与角色对应关系 -->
		<beans:property name="securityMetadataSource" ref="mySecurityMetadataSource" />
	</beans:bean>

	<beans:bean id="customDaoAuthenticationProvider"
		class="com.lbsp.promotion.webplatform.security.token.provider.CustomDaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="myUserDetailServiceImpl"></beans:property>
	</beans:bean>

	<!-- 实现了UserDetailsService的Bean -->
	<authentication-manager alias="myAuthenticationManager" erase-credentials="false">
		<authentication-provider ref="customDaoAuthenticationProvider"></authentication-provider>
	</authentication-manager>
	<beans:bean id="myAccessDecisionManager"
		class="com.lbsp.promotion.webplatform.security.access.CustomAccessDecisionManager">
	</beans:bean>
	<beans:bean id="mySecurityMetadataSource"
		class="com.lbsp.promotion.webplatform.security.access.CustomMetadataSource">
		<beans:property name="pathForAllRoles">
			<beans:list>
				<beans:value>/forward/*</beans:value>
				<beans:value>/index.html</beans:value>
				<beans:value>/service/user/functions</beans:value>
				<beans:value>/service/core/param*</beans:value>
			</beans:list>

		</beans:property>
	</beans:bean>
	<beans:bean id="myUserDetailServiceImpl"
		class="com.lbsp.promotion.webplatform.security.service.SecurityUserService">
	</beans:bean>

	<!-- 未登录的切入点 -->
	<beans:bean id="authenticationProcessingFilterEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login"></beans:property>
	</beans:bean>

	<beans:bean
		class="org.springframework.security.crypto.password.StandardPasswordEncoder"></beans:bean>
</beans:beans>
